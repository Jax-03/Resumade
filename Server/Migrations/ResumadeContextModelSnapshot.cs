// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Resumade.Api;

#nullable disable

namespace Resumade.Server.Migrations
{
    [DbContext(typeof(ResumadeContext))]
    partial class ResumadeContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Resumade.Server.Models.EducationEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Duration")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EditedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Institution")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Qualification")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserProfileEntityId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserProfileEntityId");

                    b.ToTable("Education");

                    b.HasData(
                        new
                        {
                            Id = new Guid("23464247-5772-4504-94e8-a3931b0aaa79"),
                            CreatedDate = new DateTime(2023, 12, 17, 15, 50, 34, 614, DateTimeKind.Local).AddTicks(9851),
                            Duration = "4 Years",
                            EditedDate = new DateTime(2023, 12, 17, 15, 50, 34, 614, DateTimeKind.Local).AddTicks(9857),
                            Institution = "MIT",
                            Qualification = "Computer Science",
                            UserProfileEntityId = new Guid("c7d7a373-91eb-4f3c-b271-2a0cd4c00cfe")
                        },
                        new
                        {
                            Id = new Guid("e62a4961-718c-492b-b9ba-883c888a1b96"),
                            CreatedDate = new DateTime(2023, 12, 17, 15, 50, 34, 614, DateTimeKind.Local).AddTicks(9859),
                            Duration = "3 Years",
                            EditedDate = new DateTime(2023, 12, 17, 15, 50, 34, 614, DateTimeKind.Local).AddTicks(9859),
                            Institution = "Harvard",
                            Qualification = "Engineering",
                            UserProfileEntityId = new Guid("c7d7a373-91eb-4f3c-b271-2a0cd4c00cfe")
                        },
                        new
                        {
                            Id = new Guid("561db06f-a659-40ce-ba6d-dfecf9c8a8a1"),
                            CreatedDate = new DateTime(2023, 12, 17, 15, 50, 34, 614, DateTimeKind.Local).AddTicks(9906),
                            Duration = "3 Years",
                            EditedDate = new DateTime(2023, 12, 17, 15, 50, 34, 614, DateTimeKind.Local).AddTicks(9906),
                            Institution = "Stanford",
                            Qualification = "Computer Engineering",
                            UserProfileEntityId = new Guid("f330da02-4d80-4e8f-b51a-b2984f9dd648")
                        },
                        new
                        {
                            Id = new Guid("0b3c9f94-4356-4548-9d42-3247a86583bb"),
                            CreatedDate = new DateTime(2023, 12, 17, 15, 50, 34, 614, DateTimeKind.Local).AddTicks(9908),
                            Duration = "2 Years",
                            EditedDate = new DateTime(2023, 12, 17, 15, 50, 34, 614, DateTimeKind.Local).AddTicks(9908),
                            Institution = "Oxford",
                            Qualification = "Mechanical Engineering",
                            UserProfileEntityId = new Guid("f330da02-4d80-4e8f-b51a-b2984f9dd648")
                        });
                });

            modelBuilder.Entity("Resumade.Server.Models.HobbyEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Hobbies");

                    b.HasData(
                        new
                        {
                            Id = new Guid("bb3cbbe1-bdd0-4505-8f85-1e6b3e5f4dc1"),
                            Name = "Reading"
                        },
                        new
                        {
                            Id = new Guid("fda4fcc5-6f6a-42e1-af85-df22b0561b0e"),
                            Name = "Gaming"
                        },
                        new
                        {
                            Id = new Guid("8088aa60-3e4a-447c-9a53-e071fbf8c977"),
                            Name = "Cooking"
                        });
                });

            modelBuilder.Entity("Resumade.Server.Models.IndustryEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Sequence")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Industries");

                    b.HasData(
                        new
                        {
                            Id = new Guid("9113d3a1-ffb3-4957-9827-ca791b7f4ada"),
                            Name = "Administrative",
                            Sequence = 1
                        },
                        new
                        {
                            Id = new Guid("26c2dc07-f129-4b46-b558-ebc043d592a8"),
                            Name = "Construction",
                            Sequence = 2
                        },
                        new
                        {
                            Id = new Guid("f50fa30a-e868-4dd7-a657-b6c93fdea708"),
                            Name = "Consumer Services",
                            Sequence = 3
                        },
                        new
                        {
                            Id = new Guid("0cfe1cbb-d268-4de7-83bb-1a5f1a7a8a19"),
                            Name = "Education",
                            Sequence = 4
                        },
                        new
                        {
                            Id = new Guid("bb604cf6-0bd4-4508-b701-265525101e74"),
                            Name = "Entertainment",
                            Sequence = 5
                        },
                        new
                        {
                            Id = new Guid("9369eb14-9ac3-428e-b8f6-80936fb821f0"),
                            Name = "Farming",
                            Sequence = 5
                        },
                        new
                        {
                            Id = new Guid("5084f85a-d2c4-4c78-8a19-9f444f0e3ed4"),
                            Name = "Financial Services",
                            Sequence = 6
                        },
                        new
                        {
                            Id = new Guid("f22e90dd-77b9-420f-8a29-4fc5f361379a"),
                            Name = "Health Care",
                            Sequence = 7
                        },
                        new
                        {
                            Id = new Guid("1372b7fa-8072-4b9f-a6b5-e690885e489f"),
                            Name = "Manufacturing",
                            Sequence = 8
                        },
                        new
                        {
                            Id = new Guid("baba9cf6-788e-4ffe-9517-4d079070c1a6"),
                            Name = "Media",
                            Sequence = 9
                        },
                        new
                        {
                            Id = new Guid("5a9f4a2d-d8c4-4e5b-ac22-9fa584da91e0"),
                            Name = "Mining",
                            Sequence = 10
                        },
                        new
                        {
                            Id = new Guid("50d1df04-d557-4d68-bb5a-e4d793cd738c"),
                            Name = "Real Estate",
                            Sequence = 11
                        },
                        new
                        {
                            Id = new Guid("099c9d24-9e82-45d4-b458-508ef2898ebf"),
                            Name = "Retail",
                            Sequence = 12
                        },
                        new
                        {
                            Id = new Guid("b71c53ea-78a5-43bf-b3e7-890db634b30f"),
                            Name = "Technology",
                            Sequence = 13
                        },
                        new
                        {
                            Id = new Guid("2734eee8-e3f1-48d5-a312-8ac817661be7"),
                            Name = "Logistics",
                            Sequence = 14
                        },
                        new
                        {
                            Id = new Guid("16b004b5-d366-4d59-9c1d-0e8d311e4fe4"),
                            Name = "Utilities",
                            Sequence = 15
                        },
                        new
                        {
                            Id = new Guid("24dae147-9a6c-4a75-a089-e1f675f5495e"),
                            Name = "Whole Sale",
                            Sequence = 16
                        },
                        new
                        {
                            Id = new Guid("f35795bf-eafa-4c63-a481-74ee092dc980"),
                            Name = "Other",
                            Sequence = 999
                        });
                });

            modelBuilder.Entity("Resumade.Server.Models.SkillEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Skills");

                    b.HasData(
                        new
                        {
                            Id = new Guid("b765dd5f-2e69-4e85-89ec-1456c00c2a4e"),
                            Name = "Communication"
                        },
                        new
                        {
                            Id = new Guid("d54427ef-2e57-47c9-be9c-b61750645bc7"),
                            Name = "Teamwork"
                        },
                        new
                        {
                            Id = new Guid("89502f36-e513-4ec6-b9d1-6a9176781d86"),
                            Name = "Problem Solving"
                        });
                });

            modelBuilder.Entity("Resumade.Server.Models.UserProfileEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("EditedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("IndustryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Summary")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IndustryId");

                    b.ToTable("UserProfiles");

                    b.HasData(
                        new
                        {
                            Id = new Guid("c7d7a373-91eb-4f3c-b271-2a0cd4c00cfe"),
                            CreatedDate = new DateTime(2023, 12, 17, 13, 50, 34, 614, DateTimeKind.Utc).AddTicks(9817),
                            EditedDate = new DateTime(2023, 12, 17, 13, 50, 34, 614, DateTimeKind.Utc).AddTicks(9818),
                            Email = "john.doe@example.com",
                            ImageUrl = "",
                            IndustryId = new Guid("9113d3a1-ffb3-4957-9827-ca791b7f4ada"),
                            LastName = "Doe",
                            Location = "Location 1",
                            Name = "John",
                            Phone = "123456789",
                            Summary = "Profile Summary for John"
                        },
                        new
                        {
                            Id = new Guid("f330da02-4d80-4e8f-b51a-b2984f9dd648"),
                            CreatedDate = new DateTime(2023, 12, 17, 13, 50, 34, 614, DateTimeKind.Utc).AddTicks(9883),
                            EditedDate = new DateTime(2023, 12, 17, 13, 50, 34, 614, DateTimeKind.Utc).AddTicks(9884),
                            Email = "jane.smith@example.com",
                            ImageUrl = "",
                            IndustryId = new Guid("26c2dc07-f129-4b46-b558-ebc043d592a8"),
                            LastName = "Smith",
                            Location = "Location 2",
                            Name = "Jane",
                            Phone = "987654321",
                            Summary = "Profile Summary for Jane"
                        });
                });

            modelBuilder.Entity("Resumade.Server.Models.UserProfileHobbyEntity", b =>
                {
                    b.Property<Guid>("UserProfileId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("HobbyId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("UserProfileId", "HobbyId");

                    b.HasIndex("HobbyId");

                    b.ToTable("UserProfileHobby");

                    b.HasData(
                        new
                        {
                            UserProfileId = new Guid("c7d7a373-91eb-4f3c-b271-2a0cd4c00cfe"),
                            HobbyId = new Guid("bb3cbbe1-bdd0-4505-8f85-1e6b3e5f4dc1")
                        },
                        new
                        {
                            UserProfileId = new Guid("c7d7a373-91eb-4f3c-b271-2a0cd4c00cfe"),
                            HobbyId = new Guid("fda4fcc5-6f6a-42e1-af85-df22b0561b0e")
                        },
                        new
                        {
                            UserProfileId = new Guid("f330da02-4d80-4e8f-b51a-b2984f9dd648"),
                            HobbyId = new Guid("fda4fcc5-6f6a-42e1-af85-df22b0561b0e")
                        },
                        new
                        {
                            UserProfileId = new Guid("f330da02-4d80-4e8f-b51a-b2984f9dd648"),
                            HobbyId = new Guid("8088aa60-3e4a-447c-9a53-e071fbf8c977")
                        });
                });

            modelBuilder.Entity("Resumade.Server.Models.UserProfileSkillEntity", b =>
                {
                    b.Property<Guid>("UserProfileId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("SkillId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("UserProfileId", "SkillId");

                    b.HasIndex("SkillId");

                    b.ToTable("UserProfileSkills");

                    b.HasData(
                        new
                        {
                            UserProfileId = new Guid("c7d7a373-91eb-4f3c-b271-2a0cd4c00cfe"),
                            SkillId = new Guid("b765dd5f-2e69-4e85-89ec-1456c00c2a4e")
                        },
                        new
                        {
                            UserProfileId = new Guid("c7d7a373-91eb-4f3c-b271-2a0cd4c00cfe"),
                            SkillId = new Guid("d54427ef-2e57-47c9-be9c-b61750645bc7")
                        },
                        new
                        {
                            UserProfileId = new Guid("f330da02-4d80-4e8f-b51a-b2984f9dd648"),
                            SkillId = new Guid("b765dd5f-2e69-4e85-89ec-1456c00c2a4e")
                        },
                        new
                        {
                            UserProfileId = new Guid("f330da02-4d80-4e8f-b51a-b2984f9dd648"),
                            SkillId = new Guid("89502f36-e513-4ec6-b9d1-6a9176781d86")
                        });
                });

            modelBuilder.Entity("Resumade.Server.Models.WorkHistoryEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Company")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Duration")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EditedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Position")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserProfileEntityId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserProfileEntityId");

                    b.ToTable("WorkHistory");

                    b.HasData(
                        new
                        {
                            Id = new Guid("6e2e2d85-63e6-45b4-a325-113ad622a08a"),
                            Company = "Company A",
                            CreatedDate = new DateTime(2023, 12, 17, 13, 50, 34, 614, DateTimeKind.Utc).AddTicks(9871),
                            Description = "Worked on various projects",
                            Duration = "2 Years",
                            EditedDate = new DateTime(2023, 12, 17, 13, 50, 34, 614, DateTimeKind.Utc).AddTicks(9871),
                            Position = "Software Engineer",
                            UserProfileEntityId = new Guid("c7d7a373-91eb-4f3c-b271-2a0cd4c00cfe")
                        },
                        new
                        {
                            Id = new Guid("30db1286-ea8a-4a4e-a670-2cba0161bdf7"),
                            Company = "Company B",
                            CreatedDate = new DateTime(2023, 12, 17, 13, 50, 34, 614, DateTimeKind.Utc).AddTicks(9873),
                            Description = "Managed several teams",
                            Duration = "4 Years",
                            EditedDate = new DateTime(2023, 12, 17, 13, 50, 34, 614, DateTimeKind.Utc).AddTicks(9873),
                            Position = "Project Manager",
                            UserProfileEntityId = new Guid("c7d7a373-91eb-4f3c-b271-2a0cd4c00cfe")
                        },
                        new
                        {
                            Id = new Guid("4989bcae-2905-4428-b45f-9f364e785f78"),
                            Company = "Company C",
                            CreatedDate = new DateTime(2023, 12, 17, 13, 50, 34, 614, DateTimeKind.Utc).AddTicks(9918),
                            Description = "Worked in machine learning projects",
                            Duration = "3 Years",
                            EditedDate = new DateTime(2023, 12, 17, 13, 50, 34, 614, DateTimeKind.Utc).AddTicks(9918),
                            Position = "Data Scientist",
                            UserProfileEntityId = new Guid("f330da02-4d80-4e8f-b51a-b2984f9dd648")
                        },
                        new
                        {
                            Id = new Guid("d1854d24-ee6b-4a39-8850-5b2e4e0bba1c"),
                            Company = "Company D",
                            CreatedDate = new DateTime(2023, 12, 17, 13, 50, 34, 614, DateTimeKind.Utc).AddTicks(9920),
                            Description = "Developed and launched new products",
                            Duration = "5 Years",
                            EditedDate = new DateTime(2023, 12, 17, 13, 50, 34, 614, DateTimeKind.Utc).AddTicks(9920),
                            Position = "Product Manager",
                            UserProfileEntityId = new Guid("f330da02-4d80-4e8f-b51a-b2984f9dd648")
                        });
                });

            modelBuilder.Entity("Resumade.Server.Models.EducationEntity", b =>
                {
                    b.HasOne("Resumade.Server.Models.UserProfileEntity", "UserProfile")
                        .WithMany("Educations")
                        .HasForeignKey("UserProfileEntityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UserProfile");
                });

            modelBuilder.Entity("Resumade.Server.Models.UserProfileEntity", b =>
                {
                    b.HasOne("Resumade.Server.Models.IndustryEntity", "Industry")
                        .WithMany("UserProfiles")
                        .HasForeignKey("IndustryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Industry");
                });

            modelBuilder.Entity("Resumade.Server.Models.UserProfileHobbyEntity", b =>
                {
                    b.HasOne("Resumade.Server.Models.HobbyEntity", "Hobby")
                        .WithMany("UserProfileHobbies")
                        .HasForeignKey("HobbyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Resumade.Server.Models.UserProfileEntity", "UserProfile")
                        .WithMany("UserProfileHobbies")
                        .HasForeignKey("UserProfileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Hobby");

                    b.Navigation("UserProfile");
                });

            modelBuilder.Entity("Resumade.Server.Models.UserProfileSkillEntity", b =>
                {
                    b.HasOne("Resumade.Server.Models.SkillEntity", "Skill")
                        .WithMany("UserProfileSkills")
                        .HasForeignKey("SkillId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Resumade.Server.Models.UserProfileEntity", "UserProfile")
                        .WithMany("UserProfileSkills")
                        .HasForeignKey("UserProfileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Skill");

                    b.Navigation("UserProfile");
                });

            modelBuilder.Entity("Resumade.Server.Models.WorkHistoryEntity", b =>
                {
                    b.HasOne("Resumade.Server.Models.UserProfileEntity", "UserProfile")
                        .WithMany("WorkHistories")
                        .HasForeignKey("UserProfileEntityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UserProfile");
                });

            modelBuilder.Entity("Resumade.Server.Models.HobbyEntity", b =>
                {
                    b.Navigation("UserProfileHobbies");
                });

            modelBuilder.Entity("Resumade.Server.Models.IndustryEntity", b =>
                {
                    b.Navigation("UserProfiles");
                });

            modelBuilder.Entity("Resumade.Server.Models.SkillEntity", b =>
                {
                    b.Navigation("UserProfileSkills");
                });

            modelBuilder.Entity("Resumade.Server.Models.UserProfileEntity", b =>
                {
                    b.Navigation("Educations");

                    b.Navigation("UserProfileHobbies");

                    b.Navigation("UserProfileSkills");

                    b.Navigation("WorkHistories");
                });
#pragma warning restore 612, 618
        }
    }
}
